package problem0952

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

type para struct {
	one []int
}

type ans struct {
	ans int
}

type question struct {
	p para
	a ans
}

func Test_OK(t *testing.T) {
	ast := assert.New(t)

	qs := []question{
		question{
			p: para{
				one: []int{4, 6, 15, 35},
			},
			a: ans{
				4,
			},
		},
		question{
			p: para{
				one: []int{20, 50, 9, 63},
			},
			a: ans{
				2,
			},
		},
		question{
			p: para{
				one: []int{2, 3, 6, 7, 4, 12, 21, 39},
			},
			a: ans{
				8,
			},
		},
		question{
			p: para{
				one: []int{1, 2, 3, 4, 5, 6},
			},
			a: ans{
				4,
			},
		},
		question{
			p: para{
				one: []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19},
			},
			a: ans{
				14,
			},
		},
		question{
			p: para{
				one: []int{64, 54, 72, 28, 10, 43, 12, 86, 25, 92},
			},
			a: ans{
				10,
			},
		},
		question{
			p: para{
				one: []int{516, 389, 777, 13, 402, 660, 278, 151, 132, 794, 668, 858, 670, 671, 33, 164, 294, 295, 425, 301, 46, 304, 691, 953, 31, 316, 446, 836, 200, 74, 715, 332, 974, 463, 212, 853, 346, 865, 999, 618, 103, 236, 239, 114, 758, 631, 20, 637, 510},
			},
			a: ans{
				40,
			},
		},
		question{
			p: para{
				one: []int{5803, 6153, 13, 2062, 6161, 2068, 7172, 8219, 6174, 2080, 36, 4138, 6188, 8237, 46, 8240, 8242, 4151, 6202, 8253, 8269, 2126, 6226, 2135, 4187, 97, 102, 9233, 6263, 126, 3776, 2178, 4233, 8330, 9581, 8342, 152, 6297, 5487, 4253, 8350, 2208, 6308, 4262, 4263, 6314, 1053, 8373, 184, 4281, 2242, 8388, 6346, 6352, 2258, 6355, 2261, 2084, 4815, 6365, 2270, 225, 4330, 4333, 6525, 4341, 6390, 3455, 4355, 262, 8456, 6410, 2318, 6873, 4379, 6435, 297, 2439, 302, 2364, 2372, 334, 4431, 2387, 340, 8590, 345, 2400, 8548, 6508, 367, 4466, 371, 6516, 2429, 2662, 391, 2442, 8589, 398, 8595, 2452, 4506, 415, 2467, 8612, 8615, 4525, 6578, 8627, 4535, 2489, 445, 4542, 447, 8644, 4558, 629, 6611, 4567, 6564, 6620, 4582, 6638, 496, 4596, 2549, 4605, 513, 6660, 8714, 4620, 2579, 2585, 6685, 544, 4644, 557, 8816, 6717, 8767, 6723, 2628, 582, 4679, 3853, 4689, 2643, 599, 4700, 614, 8807, 618, 4882, 6768, 626, 4724, 2677, 2689, 642, 4740, 6790, 4749, 158, 8848, 5913, 4769, 2724, 2730, 4779, 8897, 717, 2206, 719, 2769, 8916, 6871, 4825, 2788, 8934, 6890, 751, 6898, 4855, 2811, 8960, 4915, 8967, 4877, 786, 2835, 2843, 2848, 6945, 2851, 8997, 2856, 6958, 6961, 9011, 9012, 9014, 6976, 4931, 4932, 842, 7309, 4947, 9046, 7001, 2910, 9055, 2917, 1169, 7017, 874, 7655, 9072, 2931, 9078, 2935, 9024, 7044, 9103, 912, 9105, 923, 5021, 7071, 1520, 5029, 2982, 5033, 2987, 7089, 7667, 2997, 950, 7533, 7096, 954, 6033, 5059, 970, 9719, 973, 3023, 1669, 5075, 3034, 2895, 5084, 9181, 7141, 7142, 3050, 9196, 7150, 9201, 1015, 5116, 9220, 9223, 3083, 1036, 1041, 175, 7197, 1055, 1057, 3108, 3109, 7212, 3123, 5173, 7223, 1081, 7007, 1085, 3143, 9293, 5424, 5205, 1893, 7266, 1128, 9325, 1146, 1157, 5258, 9357, 1166, 9361, 7325, 9385, 9392, 7346, 3254, 1208, 5309, 9412, 9416, 5321, 1229, 7374, 1238, 5339, 9436, 5344, 1254, 9451, 5368, 3326, 5376, 1282, 2945, 3341, 3343, 7440, 7441, 1298, 3348, 5397, 5398, 3351, 3633, 5416, 7465, 3975, 1325, 3376, 1335, 3385, 9536, 7492, 5445, 3399, 3402, 3408, 5462, 9559, 9934, 5474, 1383, 3437, 7535, 9593, 9597, 1406, 5503, 7555, 5511, 3464, 1423, 7568, 7570, 3651, 7573, 3481, 1437, 7589, 3496, 9649, 5559, 9665, 1474, 7627, 1487, 7632, 1495, 5592, 9126, 3558, 593, 7657, 9708, 3568, 5618, 595, 3575, 5625, 3583, 1536, 1537, 5634, 9131, 7685, 5646, 3601, 1556, 7705, 9757, 1572, 9777, 3635, 7736, 5692, 9795, 3656, 7773, 6758, 7783, 7792, 9842, 9847, 1667, 7813, 8813, 9873, 1682, 1683, 9880, 1648, 9899, 3756, 1710, 5811, 3769, 9916, 7114, 4725, 1728, 9924, 5835, 3790, 4387, 740, 7906, 5859, 1778, 3828, 3830, 1784, 9983, 1799, 9994, 5901, 1807, 1810, 5909, 8836, 1818, 5919, 5921, 1827, 7978, 5931, 3900, 1853, 7998, 3907, 8005, 8012, 3925, 8030, 3935, 3940, 5989, 8038, 3730, 5998, 3953, 8054, 1914, 6020, 6023, 1931, 1934, 6031, 8080, 1688, 8516, 1955, 4006, 4007, 6059, 6064, 1981, 4037, 6087, 1999, 2002, 4054, 8159, 4072, 6124, 2032, 4083, 2037, 8186},
			},
			a: ans{
				439,
			},
		},
		question{
			p: para{
                one: []int {6144,6146,8195,2052,4101,8198,9820,12,6158,6159,8209,3342,4115,6830,2071,8538,8224,8232,8240,6194,2100,8246,8248,2107,2108,4230,8262,2119,6217,74,2128,6221,8271,8272,8274,480,6231,8281,2138,15,2142,8288,6242,4195,8294,4113,4200,2155,6253,4206,5821,112,114,5139,8308,5323,9577,8312,8314,125,4223,1368,2178,1010,2185,8331,2190,1389,8337,4803,8341,6294,6296,6298,6301,6303,4258,4260,2214,8362,6315,8365,175,8368,6323,6325,4280,8377,6330,6335,4288,2080,4291,6340,199,2248,2249,2252,4301,6355,8404,8405,6359,216,6362,6364,2270,6368,4324,229,8532,380,8427,4334,2288,9943,4338,8436,6390,2295,4509,6393,2298,6398,258,6403,1409,2315,4366,6415,6416,6417,8466,4373,8471,5167,2332,1646,286,4383,2339,4389,8949,4396,6445,4238,4399,2353,4403,6455,313,1647,316,6464,4150,2374,6476,2445,6480,2385,338,2387,4436,8534,6490,4443,7513,8545,6256,6505,9495,363,2412,5522,2921,5864,6206,6521,4476,383,6530,4484,2437,2438,8584,4489,2443,6541,6543,4496,8594,6547,4500,2454,218,8602,8603,413,8606,8608,8609,2467,420,8614,2801,4520,9628,4524,8623,2481,6580,6581,3356,8948,6591,2496,451,6601,6563,4857,2520,6564,2524,2526,7589,8672,6224,483,6566,9427,487,7932,1447,492,9981,4592,497,4596,501,8698,2557,4606,8705,8709,467,6665,4620,8717,526,4623,6676,4632,5892,4635,6684,2589,8734,6687,4643,8741,551,4648,4871,8748,6702,2608,2609,562,566,8759,4666,4667,8764,4672,6721,2626,8772,8774,584,2637,2638,4687,4688,4690,595,8788,4694,599,6744,602,2651,2652,4703,609,4707,2660,4711,6761,6247,2674,8820,8822,8823,6776,4729,5567,8828,2837,4737,2690,2692,2693,2695,8840,4747,653,4753,2706,6806,664,2713,8858,672,4769,674,5915,8868,6821,678,4778,8875,8878,2736,1480,692,697,1823,700,3433,707,2757,2758,6855,9335,6860,8913,2773,726,6871,8920,4825,2782,2783,2787,4836,4902,748,6269,2800,6897,5276,2803,2804,4853,6902,6953,2808,761,2817,2821,6919,2824,2825,4877,4882,4883,6933,7452,5593,815,4892,3368,2852,6437,6950,9000,476,6710,813,6958,6959,6961,2866,1843,8688,6966,823,2874,827,9021,6965,9024,9025,2884,6981,838,2077,6994,6234,853,9046,9051,4959,9056,2917,4966,6289,7017,2926,829,880,5608,882,4979,886,489,2689,7034,4988,9365,1755,4997,8803,5003,8503,9106,9107,2964,2965,918,9111,836,9117,5025,5027,932,7737,5033,1863,7084,8349,5044,949,9988,7106,963,9156,3013,5063,7112,969,971,305,7119,9168,9169,5074,3032,3034,988,9185,9186,6310,3048,3056,7154,5107,1012,3061,7163,7164,1877,7170,7174,3085,5135,3091,1044,3102,3111,5163,3116,1069,9263,5168,5764,3124,7060,3131,9277,1086,1087,4960,7691,5189,5190,7239,2355,9399,173,3154,7252,1115,9309,9061,5219,7268,3942,1126,3175,3943,1947,5229,5231,5232,8040,5239,3192,3193,3194,191,9342,9345,5251,7300,1158,7304,3948,1163,3215,9360,3217,5266,3267,3220,1173,3222,7319,1178,3228,9373,7326,3232,1193,3242,5293,1198,1565,8837,5320,6003,5300,7349,3255,5304,3262,1215,1568,9419,2632,3274,7371,3276,2253,5329,7379,7381,1239,5337,1243,9439,7392,3300,9447,3304,3306,9453,3310,7409,9458,9459,5367,7417,2943,1276,5374,213,8410,1283,9476,5381,7430,5389,1294,3344,1297,5394,5395,7446,9433,3353,9499,9500,9501,1310,3363,1317,3366,5416,2268,5420,1327,3376,3377,1333,4136,7481,7484,3390,5439,3392,1347,3397,3398,7504,6592,7511,5464,228,9562,9568,5473,8763,9576,1385,5482,7533,1393,5011,7540,1400,1401,5499,7551,1408,9601,1410,1411,2966,5510,8776,1422,3992,1426,7572,8430,7574,6041,6724,7580,7585,1443,1444,3493,3313,5544,5548,3503,9649,5554,9651,9657,7613,7614,7615,7616,3521,9666,7621,7622,7624,1481,7627,3532,3533,3538,1614,5590,8616,3545,1498,3663,1501,2981,5600,5603,9702,5607,7656,7420,5613,3567,3571,3788,596,119,5630,7683,5636,7766,9735,5640,5642,9739,5645,7157,7697,1559,7428,1143,3613,1566,3615,7712,1570,1572,9765,5724,9770,1585,1586,5683,1589,9785,9788,9789,5694,1605,3654,3656,5707,5708,9806,7759,7760,9809,6755,3668,5717,9814,3673,5723,1628,9824,3681,9826,9828,2373,5393,7215,5739,5740,7442,5742,7791,7795,6078,1983,9853,8469,7808,8128,3716,9862,2327,1676,9154,5775,5780,1685,397,3739,393,1698,9893,5798,6428,3754,9899,2239,5806,7855,7861,5814,7863,1720,5819,3773,1727,9921,1732,3786,5835,5836,7886,5839,5845,7894,3799,8719,975,8495,1759,976,5755,7908,9960,7918,3823,9968,9512,7924,3831,1785,7930,5884,3837,3843,3333,7941,5761,7946,3851,1804,6786,1807,1808,5907,1814,5912,4740,6198,5916,4741,3334,7473,7977,7981,3886,1840,9063,5940,3893,5942,5943,7993,3899,1859,5956,5957,5958,5959,3912,8011,8012,8013,3918,1873,8021,3932,8034,8036,8037,8038,657,3944,8041,8042,8044,8045,8051,1912,1913,1920,473,6022,8073,1938,3395,6038,1944,8089,3995,6044,1951,1956,4006,1960,4009,4010,4012,8109,4017,8116,6069,4025,8122,8126,4031,4032,2521,8592,2038,8057,8137,4045,4047,1227,2005,9955,2009,2011,2863,4068,2022,6119,8169,8172,8173,8176,2034,8179,2037,4086,8185,8188},
			},
			a: ans{
				852,
			},
		},
	}

	for _, q := range qs {
		a, p := q.a, q.p
		ast.Equal(a.ans, largestComponentSize(p.one), "input:%v", p)
	}
}
